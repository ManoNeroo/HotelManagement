/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import db.Auth;
import db.DBUtilities;
import entities.Rights;
import entities.User;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**
 *
 * @author trinh
 */
public class Welcome extends javax.swing.JFrame {

    private int xx;
    private int xy;

    /**
     * Creates new form Welcome
     */
    public Welcome() {
        initComponents();
        setLocationRelativeTo(null);
        lbErrorSignIn.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        settingDbConnection = new javax.swing.JDialog();
        pnlCard3 = new keeptoo.KGradientPanel();
        jPanel1 = new javax.swing.JPanel();
        pnlHeader9 = new javax.swing.JPanel();
        pnlCloseSettingDb8 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtHostName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDatabaseName = new javax.swing.JTextField();
        txtUser = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnSaveConnection = new keeptoo.KButton();
        btnTestConnection = new keeptoo.KButton();
        lbErrorHostName = new javax.swing.JLabel();
        lbErrorPort = new javax.swing.JLabel();
        lbErrorDatabaseName = new javax.swing.JLabel();
        lbErrorUser = new javax.swing.JLabel();
        lbErrorPassword = new javax.swing.JLabel();
        loading = new javax.swing.JDialog();
        lbLoading = new javax.swing.JLabel();
        errorModal = new javax.swing.JDialog();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        pnlCloseErrorModal = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lbError = new javax.swing.JLabel();
        lbErrorTitle = new javax.swing.JLabel();
        successModal = new javax.swing.JDialog();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        pnlCloseSuccessModal = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lbSuccess = new javax.swing.JLabel();
        lbSuccessTitle = new javax.swing.JLabel();
        pnlCard2 = new keeptoo.KGradientPanel();
        pnlHeader = new javax.swing.JPanel();
        pnlCloseWelcome = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        pnlMinimizeWelcome = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        pnlOpenSettingWelcome = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        pnlCards1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtSignInUserName = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btnSignIn = new keeptoo.KButton();
        txtSignInPassword = new javax.swing.JPasswordField();
        lbErrorSignIn = new javax.swing.JLabel();

        settingDbConnection.setMinimumSize(new java.awt.Dimension(560, 511));
        settingDbConnection.setModal(true);
        settingDbConnection.setUndecorated(true);

        pnlCard3.setBackground(new java.awt.Color(255, 255, 255));
        pnlCard3.setkBorderRadius(0);
        pnlCard3.setkEndColor(new java.awt.Color(255, 255, 255));
        pnlCard3.setkStartColor(new java.awt.Color(255, 255, 255));
        pnlCard3.setPreferredSize(new java.awt.Dimension(450, 392));

        jPanel1.setBackground(new Color(0,0,0,0));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.CardLayout());

        pnlHeader9.setBackground(new Color(0,0,0,0));

        pnlCloseSettingDb8.setBackground(new Color(0,0,0,0));
        pnlCloseSettingDb8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlCloseSettingDb8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlCloseSettingDbMousePressed(evt);
            }
        });

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/items/closeblack20.png"))); // NOI18N

        javax.swing.GroupLayout pnlCloseSettingDb8Layout = new javax.swing.GroupLayout(pnlCloseSettingDb8);
        pnlCloseSettingDb8.setLayout(pnlCloseSettingDb8Layout);
        pnlCloseSettingDb8Layout.setHorizontalGroup(
            pnlCloseSettingDb8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCloseSettingDb8Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        pnlCloseSettingDb8Layout.setVerticalGroup(
            pnlCloseSettingDb8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCloseSettingDb8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout pnlHeader9Layout = new javax.swing.GroupLayout(pnlHeader9);
        pnlHeader9.setLayout(pnlHeader9Layout);
        pnlHeader9Layout.setHorizontalGroup(
            pnlHeader9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeader9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlCloseSettingDb8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlHeader9Layout.setVerticalGroup(
            pnlHeader9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeader9Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(pnlCloseSettingDb8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        jPanel9.setBackground(new Color(0,0,0,0));
        jPanel9.setOpaque(false);

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Thiết lập kết nối CSDL");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel2.setText("Tên host:");

        txtHostName.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        txtHostName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        txtHostName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtHostNameFocusGained(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel3.setText("Port:");

        txtPort.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        txtPort.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        txtPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPortFocusGained(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel4.setText("Tên CSDL:");

        txtDatabaseName.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        txtDatabaseName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        txtDatabaseName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDatabaseNameFocusGained(evt);
            }
        });

        txtUser.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        txtUser.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        txtUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUserFocusGained(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel10.setText("Tên người dùng:");

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel11.setText("Mật khẩu:");

        txtPassword.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        txtPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
        });

        btnSaveConnection.setText("Lưu lại");
        btnSaveConnection.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnSaveConnection.setkBorderRadius(36);
        btnSaveConnection.setkEndColor(new java.awt.Color(204, 255, 255));
        btnSaveConnection.setkHoverColor(new java.awt.Color(51, 51, 255));
        btnSaveConnection.setkHoverEndColor(new java.awt.Color(51, 51, 255));
        btnSaveConnection.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnSaveConnection.setkHoverStartColor(new java.awt.Color(204, 255, 255));
        btnSaveConnection.setkPressedColor(new java.awt.Color(51, 51, 255));
        btnSaveConnection.setkSelectedColor(new java.awt.Color(51, 51, 255));
        btnSaveConnection.setkStartColor(new java.awt.Color(51, 51, 255));
        btnSaveConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveConnectionActionPerformed(evt);
            }
        });

        btnTestConnection.setText("Thử kết nối");
        btnTestConnection.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnTestConnection.setkBorderRadius(36);
        btnTestConnection.setkEndColor(new java.awt.Color(204, 255, 255));
        btnTestConnection.setkHoverColor(new java.awt.Color(51, 51, 255));
        btnTestConnection.setkHoverEndColor(new java.awt.Color(51, 51, 255));
        btnTestConnection.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnTestConnection.setkHoverStartColor(new java.awt.Color(204, 255, 255));
        btnTestConnection.setkPressedColor(new java.awt.Color(51, 51, 255));
        btnTestConnection.setkSelectedColor(new java.awt.Color(51, 51, 255));
        btnTestConnection.setkStartColor(new java.awt.Color(51, 51, 255));
        btnTestConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestConnectionActionPerformed(evt);
            }
        });

        lbErrorHostName.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        lbErrorHostName.setForeground(new java.awt.Color(255, 0, 0));

        lbErrorPort.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        lbErrorPort.setForeground(new java.awt.Color(255, 0, 0));

        lbErrorDatabaseName.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        lbErrorDatabaseName.setForeground(new java.awt.Color(255, 0, 0));

        lbErrorUser.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        lbErrorUser.setForeground(new java.awt.Color(255, 0, 0));

        lbErrorPassword.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        lbErrorPassword.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(btnSaveConnection, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(btnTestConnection, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHostName)
                            .addComponent(txtPort)
                            .addComponent(txtDatabaseName)
                            .addComponent(txtUser)
                            .addComponent(txtPassword)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbErrorHostName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbErrorPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbErrorDatabaseName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbErrorUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbErrorPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(20, 20, 20))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtHostName, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addComponent(lbErrorHostName, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPort, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addComponent(lbErrorPort, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDatabaseName, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addComponent(lbErrorDatabaseName, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUser, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addComponent(lbErrorUser, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(lbErrorPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveConnection, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTestConnection, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlCard3Layout = new javax.swing.GroupLayout(pnlCard3);
        pnlCard3.setLayout(pnlCard3Layout);
        pnlCard3Layout.setHorizontalGroup(
            pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(pnlHeader9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlCard3Layout.setVerticalGroup(
            pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard3Layout.createSequentialGroup()
                .addGroup(pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlHeader9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout settingDbConnectionLayout = new javax.swing.GroupLayout(settingDbConnection.getContentPane());
        settingDbConnection.getContentPane().setLayout(settingDbConnectionLayout);
        settingDbConnectionLayout.setHorizontalGroup(
            settingDbConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingDbConnectionLayout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(pnlCard3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );
        settingDbConnectionLayout.setVerticalGroup(
            settingDbConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingDbConnectionLayout.createSequentialGroup()
                .addGap(0, 55, Short.MAX_VALUE)
                .addComponent(pnlCard3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 55, Short.MAX_VALUE))
        );

        loading.setMinimumSize(new java.awt.Dimension(560, 511));
        loading.setModal(true);
        loading.setUndecorated(true);

        lbLoading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbLoading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/items/loading.gif"))); // NOI18N

        javax.swing.GroupLayout loadingLayout = new javax.swing.GroupLayout(loading.getContentPane());
        loading.getContentPane().setLayout(loadingLayout);
        loadingLayout.setHorizontalGroup(
            loadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbLoading, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
        );
        loadingLayout.setVerticalGroup(
            loadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbLoading, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
        );

        errorModal.setMinimumSize(new java.awt.Dimension(560, 511));
        errorModal.setModal(true);
        errorModal.setUndecorated(true);

        kGradientPanel1.setkBorderRadius(0);
        kGradientPanel1.setkEndColor(new java.awt.Color(255, 102, 102));
        kGradientPanel1.setkStartColor(new java.awt.Color(255, 102, 102));

        pnlCloseErrorModal.setBackground(new Color(0,0,0,0));
        pnlCloseErrorModal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlCloseErrorModal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlCloseErrorModalpnlCloseSettingDbMousePressed(evt);
            }
        });

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/items/closewhite20.png"))); // NOI18N

        javax.swing.GroupLayout pnlCloseErrorModalLayout = new javax.swing.GroupLayout(pnlCloseErrorModal);
        pnlCloseErrorModal.setLayout(pnlCloseErrorModalLayout);
        pnlCloseErrorModalLayout.setHorizontalGroup(
            pnlCloseErrorModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCloseErrorModalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        pnlCloseErrorModalLayout.setVerticalGroup(
            pnlCloseErrorModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCloseErrorModalLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/items/errorwhite50.png"))); // NOI18N

        lbError.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbError.setForeground(new java.awt.Color(255, 255, 255));
        lbError.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lbErrorTitle.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        lbErrorTitle.setForeground(new java.awt.Color(255, 255, 255));
        lbErrorTitle.setText("Thông báo lỗi");
        lbErrorTitle.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(lbErrorTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlCloseErrorModal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(pnlCloseErrorModal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbErrorTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addComponent(lbError, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout errorModalLayout = new javax.swing.GroupLayout(errorModal.getContentPane());
        errorModal.getContentPane().setLayout(errorModalLayout);
        errorModalLayout.setHorizontalGroup(
            errorModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorModalLayout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );
        errorModalLayout.setVerticalGroup(
            errorModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorModalLayout.createSequentialGroup()
                .addContainerGap(195, Short.MAX_VALUE)
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(196, Short.MAX_VALUE))
        );

        successModal.setMinimumSize(new java.awt.Dimension(560, 511));
        successModal.setModal(true);
        successModal.setUndecorated(true);

        kGradientPanel2.setkBorderRadius(0);
        kGradientPanel2.setkEndColor(new java.awt.Color(0, 204, 153));
        kGradientPanel2.setkStartColor(new java.awt.Color(0, 204, 153));

        pnlCloseSuccessModal.setBackground(new Color(0,0,0,0));
        pnlCloseSuccessModal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlCloseSuccessModal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlCloseSuccessModalpnlCloseSettingDbMousePressed(evt);
            }
        });

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/items/closewhite20.png"))); // NOI18N

        javax.swing.GroupLayout pnlCloseSuccessModalLayout = new javax.swing.GroupLayout(pnlCloseSuccessModal);
        pnlCloseSuccessModal.setLayout(pnlCloseSuccessModalLayout);
        pnlCloseSuccessModalLayout.setHorizontalGroup(
            pnlCloseSuccessModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCloseSuccessModalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        pnlCloseSuccessModalLayout.setVerticalGroup(
            pnlCloseSuccessModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCloseSuccessModalLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/items/successwhite60.png"))); // NOI18N

        lbSuccess.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbSuccess.setForeground(new java.awt.Color(255, 255, 255));
        lbSuccess.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lbSuccessTitle.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        lbSuccessTitle.setForeground(new java.awt.Color(255, 255, 255));
        lbSuccessTitle.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                        .addComponent(lbSuccessTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlCloseSuccessModal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbSuccess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                        .addComponent(pnlCloseSuccessModal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbSuccessTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addComponent(lbSuccess, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout successModalLayout = new javax.swing.GroupLayout(successModal.getContentPane());
        successModal.getContentPane().setLayout(successModalLayout);
        successModalLayout.setHorizontalGroup(
            successModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(successModalLayout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );
        successModalLayout.setVerticalGroup(
            successModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(successModalLayout.createSequentialGroup()
                .addContainerGap(195, Short.MAX_VALUE)
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(196, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        pnlCard2.setkBorderRadius(0);
        pnlCard2.setkEndColor(new java.awt.Color(255, 0, 255));
        pnlCard2.setkStartColor(new java.awt.Color(0, 153, 255));
        pnlCard2.setMinimumSize(new java.awt.Dimension(560, 511));
        pnlCard2.setPreferredSize(new java.awt.Dimension(560, 511));

        pnlHeader.setBackground(new Color(0,0,0,0));
        pnlHeader.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 153, 255)));
        pnlHeader.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlHeaderMouseDragged(evt);
            }
        });
        pnlHeader.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlHeaderMousePressed(evt);
            }
        });

        pnlCloseWelcome.setBackground(new Color(0,0,0,0));
        pnlCloseWelcome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlCloseWelcome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlCloseWelcomeMousePressed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/items/closewhite20.png"))); // NOI18N

        javax.swing.GroupLayout pnlCloseWelcomeLayout = new javax.swing.GroupLayout(pnlCloseWelcome);
        pnlCloseWelcome.setLayout(pnlCloseWelcomeLayout);
        pnlCloseWelcomeLayout.setHorizontalGroup(
            pnlCloseWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCloseWelcomeLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        pnlCloseWelcomeLayout.setVerticalGroup(
            pnlCloseWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCloseWelcomeLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlMinimizeWelcome.setBackground(new Color(0,0,0,0));
        pnlMinimizeWelcome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlMinimizeWelcome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlMinimizeWelcomeMousePressed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/items/minuswhite17.png"))); // NOI18N

        javax.swing.GroupLayout pnlMinimizeWelcomeLayout = new javax.swing.GroupLayout(pnlMinimizeWelcome);
        pnlMinimizeWelcome.setLayout(pnlMinimizeWelcomeLayout);
        pnlMinimizeWelcomeLayout.setHorizontalGroup(
            pnlMinimizeWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMinimizeWelcomeLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        pnlMinimizeWelcomeLayout.setVerticalGroup(
            pnlMinimizeWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMinimizeWelcomeLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlOpenSettingWelcome.setBackground(new Color(0,0,0,0));
        pnlOpenSettingWelcome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlOpenSettingWelcome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlOpenSettingWelcomeMousePressed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/items/settingwhite16.png"))); // NOI18N

        javax.swing.GroupLayout pnlOpenSettingWelcomeLayout = new javax.swing.GroupLayout(pnlOpenSettingWelcome);
        pnlOpenSettingWelcome.setLayout(pnlOpenSettingWelcomeLayout);
        pnlOpenSettingWelcomeLayout.setHorizontalGroup(
            pnlOpenSettingWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOpenSettingWelcomeLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        pnlOpenSettingWelcomeLayout.setVerticalGroup(
            pnlOpenSettingWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOpenSettingWelcomeLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeaderLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlOpenSettingWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlMinimizeWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlCloseWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeaderLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCloseWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlMinimizeWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlOpenSettingWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        pnlCards1.setBackground(new Color(0,0,0,0));
        pnlCards1.setOpaque(false);
        pnlCards1.setLayout(new java.awt.CardLayout());

        jPanel5.setBackground(new Color(0,0,0,0));
        jPanel5.setOpaque(false);

        jPanel2.setBackground(new Color(0,0,0,0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new Color(0,0,0,0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new Color(0,0,0,0));
        jPanel4.setOpaque(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/items/account.png"))); // NOI18N

        jLabel15.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(204, 204, 204));
        jLabel15.setText("Tên đăng nhập");

        txtSignInUserName.setBackground(new Color(0,0,0,0));
        txtSignInUserName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtSignInUserName.setForeground(new java.awt.Color(255, 255, 255));
        txtSignInUserName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtSignInUserName.setCaretColor(new java.awt.Color(204, 0, 255));
        txtSignInUserName.setOpaque(false);
        txtSignInUserName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSignInUserNameFocusGained(evt);
            }
        });
        txtSignInUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSignInUserNameKeyPressed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 204, 204));
        jLabel16.setText("Mật khẩu");

        btnSignIn.setText("Đăng nhập");
        btnSignIn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSignIn.setkBorderRadius(36);
        btnSignIn.setkEndColor(new java.awt.Color(0, 153, 255));
        btnSignIn.setkHoverEndColor(new java.awt.Color(255, 0, 255));
        btnSignIn.setkHoverForeGround(new java.awt.Color(255, 204, 204));
        btnSignIn.setkHoverStartColor(new java.awt.Color(0, 153, 255));
        btnSignIn.setkPressedColor(new java.awt.Color(0, 102, 255));
        btnSignIn.setkStartColor(new java.awt.Color(255, 0, 255));
        btnSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignInActionPerformed(evt);
            }
        });

        txtSignInPassword.setBackground(new Color(0,0,0,0));
        txtSignInPassword.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtSignInPassword.setForeground(new java.awt.Color(255, 255, 255));
        txtSignInPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtSignInPassword.setCaretColor(new java.awt.Color(204, 0, 255));
        txtSignInPassword.setOpaque(false);
        txtSignInPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSignInPasswordFocusGained(evt);
            }
        });
        txtSignInPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSignInPasswordKeyPressed(evt);
            }
        });

        lbErrorSignIn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbErrorSignIn.setForeground(new java.awt.Color(255, 51, 0));
        lbErrorSignIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/items/errorred17.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSignInUserName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSignIn, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                    .addComponent(txtSignInPassword)
                    .addComponent(lbErrorSignIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSignInUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSignInPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(lbErrorSignIn)
                .addGap(18, 18, 18)
                .addComponent(btnSignIn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        pnlCards1.add(jPanel5, "card2");

        javax.swing.GroupLayout pnlCard2Layout = new javax.swing.GroupLayout(pnlCard2);
        pnlCard2.setLayout(pnlCard2Layout);
        pnlCard2Layout.setHorizontalGroup(
            pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlCards1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlCard2Layout.setVerticalGroup(
            pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard2Layout.createSequentialGroup()
                .addComponent(pnlHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlCards1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCard2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCard2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void setBgColor(JPanel p, Color c) {
        p.setBackground(c);
    }

    private void pnlCloseWelcomeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCloseWelcomeMousePressed
        System.exit(0);
    }//GEN-LAST:event_pnlCloseWelcomeMousePressed

    private void pnlMinimizeWelcomeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMinimizeWelcomeMousePressed
        setExtendedState(this.ICONIFIED);
    }//GEN-LAST:event_pnlMinimizeWelcomeMousePressed

    private void pnlHeaderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlHeaderMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        setLocation(x - xx, y - xy);
    }//GEN-LAST:event_pnlHeaderMouseDragged

    private void pnlHeaderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlHeaderMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_pnlHeaderMousePressed

    private void pnlOpenSettingWelcomeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlOpenSettingWelcomeMousePressed
        settingDbConnection.setBackground(new Color(0, 0, 0, 80));
        settingDbConnection.setLocationRelativeTo(this);
        settingDbConnection.setVisible(true);
        lbErrorSignIn.setVisible(false);
    }//GEN-LAST:event_pnlOpenSettingWelcomeMousePressed

    private void pnlCloseSettingDbMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCloseSettingDbMousePressed
        settingDbConnection.setVisible(false);
        resetFormSettingDb();
    }//GEN-LAST:event_pnlCloseSettingDbMousePressed

    private void btnTestConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestConnectionActionPerformed
        String url = getJdbcUrl();
        loading.setBackground(new Color(0, 0, 0, 80));
        loading.setLocationRelativeTo(this);
        if (url != null) {
            Thread t1 = new Thread() {
                @Override
                public void run() {
                    loading.setVisible(true);
                }

            };
            t1.start();
            Thread t2 = new Thread() {
                @Override
                public void run() {
                    if (DBUtilities.testConnection(url)) {
                        loading.setVisible(false);
                        successModal.setLocationRelativeTo(settingDbConnection);
                        successModal.setBackground(new Color(0, 0, 0, 80));
                        lbSuccessTitle.setText("Thành Công.");
                        lbSuccess.setText("Kết nối thành công tới cơ sở dữ liệu.");
                        successModal.setVisible(true);
                    } else {
                        loading.setVisible(false);
                        errorModal.setLocationRelativeTo(settingDbConnection);
                        errorModal.setBackground(new Color(0, 0, 0, 80));
                        lbErrorTitle.setText("Lỗi kết nối.");
                        lbError.setText("Kết thất bại. Vui lòng kiểm tra lại.");
                        errorModal.setVisible(true);
                    }
                }

            };
            t2.start();
        }
    }//GEN-LAST:event_btnTestConnectionActionPerformed

    private void btnSaveConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveConnectionActionPerformed
        String url = getJdbcUrl();
        if (url != null) {
            Properties p = new Properties();
            try {
                File dir = new File("config");
                if (!dir.exists()) {
                    dir.mkdir();
                }
                File f = new File("config\\config.properties");
                if (!f.exists()) {
                    f.createNewFile();
                }
                FileInputStream fin = new FileInputStream(f);
                p.load(fin);
                FileOutputStream fout = new FileOutputStream(f);
                p.setProperty("url", url);
                p.store(fout, "saved url");
                fin.close();
                fout.close();
                settingDbConnection.setVisible(false);
                resetFormSettingDb();
            } catch (IOException ex) {
                Logger.getLogger(Welcome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSaveConnectionActionPerformed
    private String getJdbcUrl() {
        String url = null;
        String hostName = txtHostName.getText().trim();
        String strPort = txtPort.getText().trim();
        int port;
        try {
            port = Integer.parseInt(strPort);
        } catch (Exception e) {
            port = 0;
        }
        String databaseName = txtDatabaseName.getText().trim();
        String user = txtUser.getText();
        String password = new String(txtPassword.getPassword());
        int err = 0;
        if (hostName.equals("")) {
            lbErrorHostName.setText("Vui lòng điền tên host!");
            err = 1;
        }
        if (strPort.equals("")) {
            lbErrorPort.setText("Vui lòng điền Port!");
            err = 1;
        }
        if (port == 0) {
            lbErrorPort.setText("Không đúng định dạng port!");
            err = 1;
        }
        if (databaseName.equals("")) {
            lbErrorDatabaseName.setText("Vui lòng điền tên database!");
            err = 1;
        }
        if (user.equals("")) {
            lbErrorUser.setText("Vui lòng điền tên người dùng");
            err = 1;
        }
        if (password.equals("")) {
            lbErrorPassword.setText("Vui lòng điền mật khẩu");
            err = 1;
        }
        if (err == 0) {
            url = "jdbc:sqlserver://" + hostName + ":" + port + ";databaseName=" + databaseName + ";user=" + user + ";password=" + password;
        }
        return url;
    }

    private void resetFormSettingDb() {
        txtHostName.setText("");
        txtPort.setText("");
        txtDatabaseName.setText("");
        txtUser.setText("");
        txtPassword.setText("");
        lbErrorHostName.setText("");
        lbErrorPassword.setText("");
        lbErrorPort.setText("");
        lbErrorUser.setText("");
        lbErrorPassword.setText("");
    }

    private void txtHostNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHostNameFocusGained
        lbErrorHostName.setText("");
    }//GEN-LAST:event_txtHostNameFocusGained

    private void txtPortFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPortFocusGained
        lbErrorPort.setText("");
    }//GEN-LAST:event_txtPortFocusGained

    private void txtDatabaseNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDatabaseNameFocusGained
        lbErrorDatabaseName.setText("");
    }//GEN-LAST:event_txtDatabaseNameFocusGained

    private void txtUserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserFocusGained
        lbErrorUser.setText("");
    }//GEN-LAST:event_txtUserFocusGained

    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusGained
        lbErrorPassword.setText("");
    }//GEN-LAST:event_txtPasswordFocusGained
    private boolean catchErrorSignIn(String userName, String password) {
        int err = 0;
        if (userName.equals("")) {
            lbErrorSignIn.setText("\tVui lòng điền tên đăng nhập.");
            err = 1;
        } else if (password.equals("")) {
            lbErrorSignIn.setText("\tVui lòng điền mật khẩu.");
            err = 1;
        }
        if (err == 1) {
            lbErrorSignIn.setVisible(true);
            return false;
        }
        return true;
    }

    private void handleSignIn() {
        String userName = txtSignInUserName.getText().trim();
        String password = new String(txtSignInPassword.getPassword()).trim();
        if (catchErrorSignIn(userName, password)) {
            Thread t1 = new Thread() {
                @Override
                public void run() {
                    Connection con = DBUtilities.openConnection();
                    CallableStatement cstmt = null;
                    ResultSet rs = null;
                    if (con == null) {
                        loading.setVisible(false);
                        lbErrorSignIn.setText("\tVui lòng thiết lập lại cở sở dữ liệu.");
                        lbErrorSignIn.setVisible(true);
                    } else {
                        loading.setVisible(false);
                        try {
                            cstmt = con.prepareCall("{call usp_getUserByUserName (?)}");
                            cstmt.setString(1, userName);
                            rs = cstmt.executeQuery();
                            int rightsId = 0;
                            User u = null;
                            while (rs.next()) {
                                u = new User(rs.getString("id"), rs.getString("userName"), rs.getString("password"), rs.getString("fullName"));
                                rightsId = rs.getInt("rightsId");
                                if (rightsId != 0) {
                                    cstmt = con.prepareCall("{call usp_getRightsById(?)}");
                                    cstmt.setInt(1, rightsId);
                                    rs = cstmt.executeQuery();
                                    while (rs.next()) {
                                        Rights r = new Rights(rs.getInt("id"), rs.getString("name"));
                                        u.setRights(r);
                                    }
                                }
                            }
                            if (u != null) {
                                if (password.equals(u.getPassword())) {
                                    User user = u;
                                    Thread t1 = new Thread() {
                                        @Override
                                        public void run() {
                                            new MainView(user).setVisible(true);
                                        }
                                    };
                                    Thread t2 = new Thread() {
                                        @Override
                                        public void run() {
                                            dispose();
                                            FirstView fv = new FirstView();
                                            fv.setVisible(true);
                                            int i = 0;
                                            try {
                                                while (true) {
                                                    Thread.sleep(100);
                                                    if (i <= 98) {
                                                        fv.processBar.setValue(i);
                                                        i++;
                                                    }
                                                    if (!t1.isAlive()) {
                                                        fv.processBar.setValue(100);
                                                        fv.dispose();
                                                        break;
                                                    }
                                                }
                                            } catch (InterruptedException ex) {
                                                Logger.getLogger(Welcome.class.getName()).log(Level.SEVERE, null, ex);
                                            }
                                        }
                                    };
                                    t1.start();
                                    t2.start();
                                    Properties p = new Properties();
                                    try {
                                        File dir = new File("config");
                                        if (!dir.exists()) {
                                            dir.mkdir();
                                        }
                                        File f = new File("config\\config.properties");
                                        if (!f.exists()) {
                                            f.createNewFile();
                                        }
                                        FileInputStream fin = new FileInputStream(f);
                                        p.load(fin);
                                        FileOutputStream fout = new FileOutputStream(f);
                                        p.setProperty("userId", u.getId());
                                        p.store(fout, "saved userId");
                                        fin.close();
                                        fout.close();
                                    } catch (IOException ex) {
                                        Logger.getLogger(Welcome.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                } else {
                                    lbErrorSignIn.setText("\tTên đăng nhập hoặc mật khẩu không đúng.");
                                    lbErrorSignIn.setVisible(true);
                                }
                            } else {
                                lbErrorSignIn.setText("\tTên đăng nhập hoặc mật khẩu không đúng.");
                                lbErrorSignIn.setVisible(true);
                            }
                        } catch (SQLException ex) {
                            Logger.getLogger(Welcome.class.getName()).log(Level.SEVERE, null, ex);
                            lbErrorSignIn.setText("\tThiết lập sai cơ sở dữ liệu.");
                            lbErrorSignIn.setVisible(true);
                        }
                    }
                }

            };
            loading.setBackground(new Color(0, 0, 0, 80));
            loading.setLocationRelativeTo(this);
            Thread t2 = new Thread() {
                @Override
                public void run() {
                    loading.setVisible(true);
                }

            };
            t2.start();
            t1.start();
        }
    }
    private void btnSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignInActionPerformed
        handleSignIn();
    }//GEN-LAST:event_btnSignInActionPerformed

    private void txtSignInUserNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSignInUserNameFocusGained
        lbErrorSignIn.setVisible(false);
    }//GEN-LAST:event_txtSignInUserNameFocusGained

    private void txtSignInPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSignInPasswordFocusGained
        lbErrorSignIn.setVisible(false);
    }//GEN-LAST:event_txtSignInPasswordFocusGained

    private void pnlCloseErrorModalpnlCloseSettingDbMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCloseErrorModalpnlCloseSettingDbMousePressed
        errorModal.setVisible(false);
    }//GEN-LAST:event_pnlCloseErrorModalpnlCloseSettingDbMousePressed

    private void pnlCloseSuccessModalpnlCloseSettingDbMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCloseSuccessModalpnlCloseSettingDbMousePressed
        successModal.setVisible(false);
    }//GEN-LAST:event_pnlCloseSuccessModalpnlCloseSettingDbMousePressed

    private void txtSignInPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSignInPasswordKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            handleSignIn();
        }
    }//GEN-LAST:event_txtSignInPasswordKeyPressed

    private void txtSignInUserNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSignInUserNameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            handleSignIn();
        }
    }//GEN-LAST:event_txtSignInUserNameKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Welcome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Welcome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Welcome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Welcome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                User user = new Auth().getUser();
                if (user != null) {
                    Thread t1 = new Thread() {
                        @Override
                        public void run() {
                            new MainView(user).setVisible(true);
                        }
                    };
                    Thread t2 = new Thread() {
                        @Override
                        public void run() {
                            FirstView fv = new FirstView();
                            fv.setVisible(true);
                            int i = 0;
                            try {
                                while (true) {
                                    Thread.sleep(100);
                                    if (i <= 98) {
                                        fv.processBar.setValue(i);
                                        i++;
                                    }
                                    if (!t1.isAlive()) {
                                        fv.processBar.setValue(100);
                                        fv.dispose();
                                        break;
                                    }
                                }
                            } catch (InterruptedException ex) {
                                Logger.getLogger(Welcome.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    };
                    t2.start();
                    t1.start();
                } else {
                    new Welcome().setVisible(true);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnSaveConnection;
    private keeptoo.KButton btnSignIn;
    private keeptoo.KButton btnTestConnection;
    private javax.swing.JDialog errorModal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel9;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private javax.swing.JLabel lbError;
    private javax.swing.JLabel lbErrorDatabaseName;
    private javax.swing.JLabel lbErrorHostName;
    private javax.swing.JLabel lbErrorPassword;
    private javax.swing.JLabel lbErrorPort;
    private javax.swing.JLabel lbErrorSignIn;
    private javax.swing.JLabel lbErrorTitle;
    private javax.swing.JLabel lbErrorUser;
    private javax.swing.JLabel lbLoading;
    private javax.swing.JLabel lbSuccess;
    private javax.swing.JLabel lbSuccessTitle;
    private javax.swing.JDialog loading;
    private keeptoo.KGradientPanel pnlCard2;
    private keeptoo.KGradientPanel pnlCard3;
    private javax.swing.JPanel pnlCards1;
    private javax.swing.JPanel pnlCloseErrorModal;
    private javax.swing.JPanel pnlCloseSettingDb8;
    private javax.swing.JPanel pnlCloseSuccessModal;
    private javax.swing.JPanel pnlCloseWelcome;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JPanel pnlHeader9;
    private javax.swing.JPanel pnlMinimizeWelcome;
    private javax.swing.JPanel pnlOpenSettingWelcome;
    private javax.swing.JDialog settingDbConnection;
    private javax.swing.JDialog successModal;
    private javax.swing.JTextField txtDatabaseName;
    private javax.swing.JTextField txtHostName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPort;
    private javax.swing.JPasswordField txtSignInPassword;
    private javax.swing.JTextField txtSignInUserName;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
